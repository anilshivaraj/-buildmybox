version: 2

general:
# Uncomment the following to specify only a specific branch
#   branches:
#     only:
#       - dev # specific branch
#       - /dev-.*/ # or regexes

jobs:
  build:
    machine: true
    working_directory: ~/ci_app
    environment:
      # from https://developer.salesforce.com/docs/atlas.en-us.sfdx_setup.meta/sfdx_setup/sfdx_setup_install_cli_standalone.htm
      # and https://developer.salesforce.com/media/salesforce-cli/manifest.json
      - DX_CLI_URL: https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
    steps:
      - checkout
      - run:
          name: Download CLI
          command: |
            echo $REQUEST_ID
            mkdir sfdx
            wget -qO- $DX_CLI_URL | tar xJ -C sfdx --strip-components 1
      - run:
          name: Install CLI
          command: |
            ./sfdx/install
            sfdx
            mkdir tmp
      - run:
          name: Create hub key
          command: |
            echo 'make hub key'
            #- mkdir keys
            #- echo $HUB_SERVER_KEY_HEX | xxd -r -ps >> keys/hub.key
            openssl enc -nosalt -aes-256-cbc -d -in assets/server.key.enc -out assets/server.key -base64 -K $DECRYPTION_KEY -iv $DECRYPTION_IV
            #- openssl rsa -in keys/hub.key -check -noout
      - run:
          name: Auth Hub and Scratch Orgs
          command: |
            echo 'Running tests'
            sfdx force:auth:jwt:grant --clientid 3MVG9vtcvGoeH2biPB.r7xCufPr6F7fKVm2Qim.AAxQghM_M7t5uodK6iwvdFgzF0UkpYEcyEUaqUk2CMJaxZ --jwtkeyfile assets/server.key --username ashivaraj@deloitte.com.qrscprod --instanceurl https://login.salesforce.com --setdefaultdevhubusername -a HubOrg
            sfdx force:auth:jwt:grant --clientid 3MVG9uudbyLbNPZOKYnQ9DAeeueqo.Oe3fjIhAtXoZmu0X1hSsFYDzg.io4Z__Zwx224PzG6hKm5Fc7I.b0Mi --jwtkeyfile assets/server.key --username anil.shivaraj@gmail.com.personal --instanceurl https://login.salesforce.com -a secondaryHubOrg
            sfdx force:auth:jwt:grant --clientid 3MVG973QtA4.tpvmGIsm1S6VuSeY5Bi81942aXs8m9RsRutzYlSQcRFBIomfH1txr7WlR4xQz1BdlP2.3Lb6g --jwtkeyfile assets/server.key --username ashivaraj@deloitte.com.qrscprod.dev --instanceurl https://test.salesforce.com -a sandbox
      - run:
          name: Create Scratch Org and Deploy code
          command: |
            sfdx force:org:list --all

            if [[ $APPPERMISSIONS == 'NoTi-5;Recipes;E-Bikes;Pure-Aloe;Easy-spaces' ]]; then
              echo $APPPERMISSIONS "we are here"
            else if [[ $APPPERMISSIONS == 'NoTi-5;Recipes;E-Bikes;Pure-Aloe' ]]; then
              echo $APPPERMISSIONS "we are in 2 loop"
            else
              echo "we are not here"
            fi
            # sfdx force:auth:jwt:grant --clientid 3MVG9vtcvGoeH2biPB.r7xCufPr6F7fKVm2Qim.AAxQghM_M7t5uodK6iwvdFgzF0UkpYEcyEUaqUk2CMJaxZ --jwtkeyfile assets/server.key --username test-2ai98w5q5tjg@example.com --instanceurl https://test.salesforce.com -a $REQUEST_ID


            # sfdx force:org:create --targetdevhubusername HubOrg --setdefaultusername -s -f ~/ci_app/config/project-scratch-def.json --wait 20 --durationdays $NOOFDAYS --setalias $REQUEST_ID
            # sfdx force:user:password:generate --targetusername $REQUEST_ID
            # sfdx force:source:push -u $REQUEST_ID
            # sfdx force:org:display -u $REQUEST_ID
            # sfdx force:user:permset:assign -n recipes -u $REQUEST_ID
            # sfdx force:user:permset:assign -n ebikes -u $REQUEST_ID
            # sfdx force:user:permset:assign -n purealoe -u $REQUEST_ID
            # sfdx force:user:permset:assign -n dreamhouse -u $REQUEST_ID
            # sfdx force:user:permset:assign -n dreaminvest -u $REQUEST_ID
            # sfdx force:apex:execute -f ~/ci_app/data/dreamproperty.apex -u $REQUEST_ID
            # sfdx force:data:tree:import -p ~/ci_app/data/export-demo-Account-Contact-Case-Opportunity-plan.json -u $REQUEST_ID
            # sfdx force:data:tree:import -p ~/ci_app/data/export-demo-Lead-plan.json -u $REQUEST_ID
            # sfdx force:data:tree:import --plan ~/ci_app/data/data-plan.json -u $REQUEST_ID       
            # sfdx force:data:tree:import --plan ~/ci_app/data/sample-data-plan.json -u $REQUEST_ID
            # sfdx force:data:tree:import --plan ~/ci_app/data/Harvest_Field__c-plan.json -u $REQUEST_ID
            # sfdx force:data:tree:import --plan ~/ci_app/data/Merchandise__c-plan.json -u $REQUEST_ID
            # sfdx force:data:bulk:upsert -s Sector__c -f ~/ci_app/data/sectors.csv -w 1 -i Sector_Id__c -u $REQUEST_ID
            # sfdx force:data:bulk:upsert -s Fund__c -f ~/ci_app/data/funds.csv -w 1 -i Id -u $REQUEST_ID
            # export SCRATCH_DETAILS="$(eval sfdx force:org:display -u $REQUEST_ID)"
            # echo "$SCRATCH_DETAILS" > SCRATCH_DETAILS.TXT
            # echo $SCRATCH_DETAILS
            # export SCRATCH_LIMITS="$(eval sfdx force:limits:api:display -u $REQUEST_ID)"
            # echo "$SCRATCH_LIMITS" > SCRATCH_LIMITS.TXT
            # echo $SCRATCH_LIMITS
            # sfdx force:data:record:update -s Request_Scratch_Org__c -i $REQUEST_SFID -v "Scratch_Org_Details__c='$SCRATCH_DETAILS' Status__c='Scratch Org Created'" -u HubOrg
            # sfdx force:data:record:create -s Scratch_Org_Creds__c -v "Name='ScratchOrgDetails' Sandbox_Limits__c='$SCRATCH_LIMITS' Org_Details__c='$SCRATCH_DETAILS'" -u $REQUEST_ID



            # sfdx force:source:convert -r force-app -d testDeploy 
            # sfdx force:mdapi:deploy -d testDeploy/ -u sandbox -w 20
            # sfdx force:apex:execute -f assets/loadorgdata.apex -u newscratch
